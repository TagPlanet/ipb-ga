<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>(TP) Google Analytics Core Extender</hook_name>
      <hook_desc>Extends the output for global googleAnalytics functions</hook_desc>
      <hook_author>Philip Lawrence</hook_author>
      <hook_email/>
      <hook_website>http://tagpla.net</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:0:{}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.0</hook_version_human>
      <hook_version_long>10000</hook_version_long>
      <hook_extra_data/>
      <hook_key>TP_GoogleAnalyticsOutput</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>TP_GoogleAnalyticsOutput.php</hook_file_real>
      <hook_type>libraryHooks</hook_type>
      <hook_classname>TP_GoogleAnalyticsOutput</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:4:"core";s:15:"classToOverload";s:6:"output";s:9:"skinGroup";N;s:12:"skinFunction";N;s:4:"type";N;s:2:"id";N;s:8:"position";N;}]]></hook_data>
      <hooks_source><![CDATA[<?php

/**
 * (TP) Google Analytics
 * Allow us to include our libraries at all times
 */
class TP_GoogleAnalyticsOutput extends (~extends~)
{
    /**
     * {@inherit}
     */
    public function __construct( ipsRegistry $registry, $initialize = FALSE )
    {
        // Load our Google Analytics class, to use in templates
        if ( ! ipsRegistry::isClassLoaded( 'googleAnalytics' ) )
        {
            $classToLoad = IPSLib::loadLibrary( IPSLib::getAppDir('TP_GoogleAnalytics') . '/sources/classes/TP_GoogleAnalytics.php' , 'TP_GoogleAnalytics_core' , 'core' );
            $registry->setClass( 'googleAnalytics' , new $classToLoad( $registry ) );
        }
        
        parent::__construct( $registry, $initialize );
    }
    
    /**
     * {@inherit}
     */
    public function sendOutput( $return = false )
    {
        // If we have our own GA code, hook into the IP.SEO (now integrated)
        //   code. If we don't have anything, leave it alone and let the 
        //   default IP.SEO code in. This could be from a user not configuring
        //   the Google Analytics in the extended section.
        $rendering = $this->registry->TP_GoogleAnalytics->render();
        if( $rendering != '' )
            $this->settings['ipseo_ga'] = $rendering;
        
        return parent::sendOutput( $return );
    }
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_replacements/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>